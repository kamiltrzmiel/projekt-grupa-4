{"mappings":"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","sources":["src/js/main.js","src/js/services/detailModal.js","src/js/services/setModalButtnos.js","src/js/services/userMovies.js"],"sourcesContent":["/* -------------------------------- VARIABLES ------------------------------- */\nimport { API_URL, IMG_URL, API_KEY, LANGUAGE } from './variables/constants';\nimport { Pagination } from 'tui-pagination';\n/* --------------------------------- HEADER --------------------------------- */\n\nimport keyword_searcher from './keyword_searcher';\nimport { moviesLoading } from './services/loader';\nimport { reloadHeader, setRegisterAndSignUp } from './services/firebase';\n\n/* --------------------------------- FOOTER --------------------------------- */\nconst dialog = document.getElementById('footer-dialog');\nconst hideDialogBtn = document.getElementById('hide');\nconst showDialogBtn = document.getElementById('show');\nconst body = document.querySelector('body');\n\nreloadHeader();\nsetRegisterAndSignUp();\n\nshowDialogBtn.addEventListener('click', () => {\n  body.style.overflow = 'hidden';\n  dialog.showModal();\n});\n\nconst closeModal = () => {\n  body.style.overflow = 'auto';\n  dialog.close();\n};\n\nhideDialogBtn.addEventListener('click', closeModal);\ndialog.addEventListener('close', closeModal);\n\n/* --------------------------------- MOVIE-MODAL --------------------------------- */\n\nconst hideModalBtn = document.getElementById('hide-modal');\nconst movieModal = document.getElementById('modal-backdrop');\n\nconst toggleModal = () => {\n  movieModal.classList.toggle('hidden');\n};\n\nhideModalBtn.addEventListener('click', toggleModal);\n\n/* ------------------------------ USAGE EXAMPLE ----------------------------- */\nimport api from './services/api';\nimport { render } from './services/render';\nconst renderElement = document.getElementById('posters');\n\nconst fetchTrendingMovies = async page => {\n  try {\n    const response = await api.fetchTrendingMovies(page);\n    const data = response.data.results;\n    render(data, renderElement, true);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nmoviesLoading();\nsetTimeout(() => {\n  fetchTrendingMovies(1);\n}, 250);\n","import api from './api';\nconst renderElement = document.getElementById('posters');\nimport { setModalButtons } from './setModalButtnos';\n\nrenderElement.addEventListener('click', e => {\n  const detailDialogEl = document.getElementById('modal-backdrop');\n  const id = e.target.parentNode.dataset.id;\n\n  const fetchMovieById = async id => {\n    try {\n      const response = await api.fetchMovieById(id);\n      const item = response.data;\n      console.log(item);\n      const genres = item.genres.map(movie => movie.name).join(', ');\n\n      item.poster_path\n        ? (item.poster_path = `https://image.tmdb.org/t/p/w500/${item.poster_path}`)\n        : (item.poster_path = placeholder);\n      detailDialogEl.innerHTML = `<div class=\"container\">\n      <div id=\"modal-wrapper\" class=\"modal\">\n       <button id=\"hide-modal\" class=\"footer-modal__closeBtn\">\n              x\n            </button>\n                <img id=\"modal-image\" src=\"${item.poster_path}\" class=\"modal__image\" alt=\"${\n        item.title\n      }\" />\n                <div id=\"modal-text\" class=\"modal__text\">\n                  <div class=\"modal__description\">\n                    <h3 class=\"modal__title\">${item.title}</h3>\n                  </div>\n                  <div id=\"modal-info\" class=\"modal__info\">\n                    <p class=\"modal__info--classification\">Vote / Votes</p>\n                    <p class=\"modal__info--detailed\">\n                      <span class=\"modal__info--score\">${item.vote_average.toFixed(1)}</span> /\n                      <span class=\"modal__info--score--second\">${item.vote_count}</span>\n                    </p>\n                  </div>\n                  <div id=\"modal-info\" class=\"modal__info\">\n                    <p class=\"modal__info--classification\">Popularity</p>\n                    <p class=\"modal__info--detailed\">${item.popularity.toFixed(0)}</p>\n                  </div>\n                  <div id=\"modal-info\" class=\"modal__info\">\n                    <p class=\"modal__info--classification\">Original title</p>\n                    <p class=\"modal__info--detailed\">${item.original_title}</p>\n                  </div>\n                  <div id=\"modal-info\" class=\"modal__info\">\n                    <p class=\"modal__info--classification\">Genre</p>\n                    <p class=\"modal__info--detailed\">${genres}</p>\n                  </div>\n                  <article id=\"modal-article\" class=\"modal__article\">\n                    <h4 class=\"modal__article--title\">ABOUT</h4>\n                    <p id=\"modal-article-description\" class=\"modal__article--description\">\n                      ${item.overview}\n                    </p>\n                  </article>\n                  <div class=\"modal__buttons\">\n                    <button id=\"modal-watched\" class=\"modal__btn--watched\">ADD TO WATCHED</button>\n                    <button id=\"modal-queue\" class=\"modal__btn--queued\">ADD TO QUEUE</button>\n                  </div>\n                </div>\n              </div>\n            </div>`;\n      const closeDetailModalBtn = document.getElementById('hide-modal');\n      closeDetailModalBtn.addEventListener('click', () => detailDialogEl.close());\n      setModalButtons(item);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  fetchMovieById(id);\n  detailDialogEl.showModal();\n});\n","import { UserMovies } from './userMovies';\nimport { getUser, saveMovieToDatabase } from './firebase';\n\n//tworzy nowy obiekt który ma w sobie dane i medoty związane z bazą danych\nexport const userMovies = new UserMovies();\n\n//Funkcja pobiera z dokumentu przyciski dodania do obejrzanych i do kolejki oraz przypisuje im funkcje w eventListnerach\n//Funkcja przyjmuje jako argument obiekt - w domyśle dane pobrane z TMDB dane jednego filmu\n//dlatego najlepiej dorzucić ją do funkcji tworzenia Modala która powinna operować na tym samym obiekcie.\n\nconst saveMovie = async (data, type) => {\n  console.log(data);\n  const user = await getUser();\n  if (!user) {\n    alert('Please first login');\n  } else {\n    const dataToSave = userMovies.addMovie(data, type);\n    console.log(dataToSave);\n    saveMovieToDatabase(dataToSave, user);\n    alert(`Movie saved to ${type} successfully!`);\n  }\n};\n\nexport const setModalButtons = data => {\n  const watchBtn = document.getElementById('modal-watched');\n  const queueBtn = document.getElementById('modal-queue');\n  watchBtn.addEventListener('click', async () => await saveMovie(data, 'watched'));\n  queueBtn.addEventListener('click', async () => await saveMovie(data, 'queued'));\n};\n","export class UserMovies {\n  //tablica w której przechowywane są filmy zapisane przez użytkownika\n  #movies = [];\n\n  //konstruktor pobiera z localStorage dane i zapisuje je do tablicy, jeśli ich nie ma tworzy pustą tablicę.\n  constructor() {\n    const movies = JSON.parse(localStorage.getItem('movies'));\n    movies ? (this.#movies = movies) : (this.#movies = []);\n  }\n\n  //metoda sprawdza czy dany film nie jest już w localStorage zmienia mu typ w zależności od potrzeby oraz jeśli warunki są odpowiednie wrzuca go do local storage.\n  checkMovie(movie, array, type) {\n    movie.type = type;\n    for (let i = 0; i < array.length; i++) {\n      if (+array[i].id === +movie.id) {\n        if (array[i].type === type) {\n          return;\n        }\n        this.#movies[i].type = type;\n        localStorage.setItem('movies', JSON.stringify(this.#movies));\n        return;\n      }\n    }\n    this.#movies.push(movie);\n    localStorage.setItem('movies', JSON.stringify(this.#movies));\n  }\n\n  //metoda dodaje podstawowe informacje o filmie do bazy danych;\n  addMovie(element, type) {\n    const movie = {\n      id: element.id,\n      title: element.title,\n      poster_path: element.poster_path,\n      vote_average: element.vote_average,\n      release_date: element.release_date,\n      genre_ids: element.genres.map(genre => genre.id),\n      type: type,\n    };\n    return movie;\n  }\n}\n"],"names":["parcelRequire","$2aea0baa387b2232$var$dialog","document","getElementById","$2aea0baa387b2232$var$hideDialogBtn","$2aea0baa387b2232$var$showDialogBtn","$2aea0baa387b2232$var$body","querySelector","$7zgG6","reloadHeader","setRegisterAndSignUp","addEventListener","style","overflow","showModal","$2aea0baa387b2232$var$closeModal","close","$2aea0baa387b2232$var$hideModalBtn","$2aea0baa387b2232$var$movieModal","classList","toggle","$2aea0baa387b2232$var$renderElement","$j2qdV","moviesLoading","setTimeout","async","page","data","$c7JiP","default","fetchTrendingMovies","results","$BGpcc","render","error","console","log","$2aea0baa387b2232$var$fetchTrendingMovies","$c4766275f973f488$export$83a582a285a10597","movies","constructor","JSON","parse","localStorage","getItem","this","checkMovie","movie","array","type","i","length","id","setItem","stringify","push","addMovie","element","title","poster_path","vote_average","release_date","genre_ids","genres","map","genre","$c4766275f973f488$var$saveMovie","user","getUser","dataToSave","saveMovieToDatabase","alert","$c4766275f973f488$export$571b98310cbd3364","watchBtn","queueBtn","e","detailDialogEl","item","fetchMovieById","name","join","placeholder","innerHTML","toFixed","vote_count","popularity","original_title","overview","target","parentNode","dataset"],"version":3,"file":"index.f48a5875.js.map"}